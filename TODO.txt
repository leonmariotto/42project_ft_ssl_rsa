



Ok !

Donc openssl refuse de generer des cles de 64 bits mais peut les lires
	- openssl rsa -in key -text
	- openssl rsautl inkey key -encrypt -in to_crypt.txt -raw


I remove the encryption header so des will not work anymore

Need to rework the prime generation to be able to explain it clearly

FIXIT: Endianess issues when store in uint8_t*.
	WTF ? -> openssl asn1parse give my params endian inverted so need to store it inverted. (not use it inverted)
	x86 is little_endian and asn store big endian so invert all when serialize AND deserialize to be able to cross with openssl
FIXIT: All end private key parameters are used by openssl so need to get it.
FIXIT: DES encryption of key.

1 - Get my rsautl work internally.
	-> Re-build all rsautl.
1.1 - Get openssl work with my key.
	-> Done

As of end of day 10/01/2022 :
-> I have broken rsautl but openssl can encrypt/decrypt with my key. Need to re-build rsautl.
-> Have to get the same result of rsautl -encrypt (openssl and ft_ssl)
-> Chinese remainder for decryption
-> Still need to support des

TODO: re-build rsautl
TODO: clean/reorganize asn ( ALL )

2 - Cross with openssl
	-> Done.

TODO: pub key rsautl
	-> How to handle this funcking thing as openssl do shit with my private key when it generate pub key
	-> Maybe don't implement.
TODO: des (ecb et cbc) encryption/decryption
	-> Get cross enc/dec with key encrypted
TODO: ./ft_ssl rsa handle openssl big key BUT NOT generate pub with it.
TODO: Comment prime generation with "How it works"


07/02/2021
-> Miller-rabbion primalirity test
-> Extented euclidian algorithm
-> Comment gen_prime for explain it in soutenance

-> Debug public-key generation (asn fuck) -> Ok
-> Debug public-key encryption (rsautl) -> Ok
-> Debug public-key analysis (rsa) -> Ok

1 -> CLEAN un max en gardant le debug...
2 -> ENCRYPTION DES ! Joie et bonheur -> C MORT ! J'envoie comme ca, ca fonctionne en interne, pas avec openssl.
3 -> Virer le debug, clean un max, faire tourner une test suite
3 -> Prime number comments...



